<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="mx.com.restaurante.test.controller.ReservacionTestController" tests="2" skipped="0" failures="0" errors="0" timestamp="2017-06-09T16:30:22" hostname="Christian-FV" time="2.4">
  <properties/>
  <testcase name="recibirClienteHome" classname="mx.com.restaurante.test.controller.ReservacionTestController" time="2.379"/>
  <testcase name="probarReservacion" classname="mx.com.restaurante.test.controller.ReservacionTestController" time="0.018"/>
  <system-out><![CDATA[[DEBUG] SpringJUnit4ClassRunner constructor called with [class mx.com.restaurante.test.controller.ReservacionTestController]
[DEBUG] Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
[DEBUG] Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
[DEBUG] Instantiating TestContextBootstrapper for test class [mx.com.restaurante.test.controller.ReservacionTestController] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
[INFO] Neither @ContextConfiguration nor @ContextHierarchy found for test class [mx.com.restaurante.test.controller.ReservacionTestController], using SpringBootContextLoader
[DEBUG] Did not detect default resource location for test class [mx.com.restaurante.test.controller.ReservacionTestController]: class path resource [mx/com/restaurante/test/controller/ReservacionTestController-context.xml] does not exist
[DEBUG] Did not detect default resource location for test class [mx.com.restaurante.test.controller.ReservacionTestController]: class path resource [mx/com/restaurante/test/controller/ReservacionTestControllerContext.groovy] does not exist
[INFO] Could not detect default resource locations for test class [mx.com.restaurante.test.controller.ReservacionTestController]: no resource found for suffixes {-context.xml, Context.groovy}.
[DEBUG] Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [mx.com.restaurante.test.controller.ReservacionTestController]
[DEBUG] @TestExecutionListeners is not present for class [mx.com.restaurante.test.controller.ReservacionTestController]: using defaults.
[INFO] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a9707b6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@591aaeda, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7febe769, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2d228a41, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4fea82e4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@430a89bd, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@637afe1a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5ab310b6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41d544a6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@56857a40, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@623bc4a4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@20cf4ef5]
[DEBUG] Retrieved @ProfileValueSourceConfiguration [null] for test class [mx.com.restaurante.test.controller.ReservacionTestController]
[DEBUG] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [mx.com.restaurante.test.controller.ReservacionTestController]
[DEBUG] Retrieved @ProfileValueSourceConfiguration [null] for test class [mx.com.restaurante.test.controller.ReservacionTestController]
[DEBUG] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [mx.com.restaurante.test.controller.ReservacionTestController]
[DEBUG] Before test class: context [DefaultTestContext@4b54ce3e testClass = ReservacionTestController, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
[DEBUG] Retrieved @ProfileValueSourceConfiguration [null] for test class [mx.com.restaurante.test.controller.ReservacionTestController]
[DEBUG] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [mx.com.restaurante.test.controller.ReservacionTestController]
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 18, missCount = 1]
[DEBUG] Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4b54ce3e testClass = ReservacionTestController, testInstance = mx.com.restaurante.test.controller.ReservacionTestController@503e49b9, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
[DEBUG] Performing dependency injection for test context [[DefaultTestContext@4b54ce3e testClass = ReservacionTestController, testInstance = mx.com.restaurante.test.controller.ReservacionTestController@503e49b9, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]].
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 19, missCount = 1]
[DEBUG] Processing injected element of bean 'mx.com.restaurante.test.controller.ReservacionTestController': AutowiredFieldElement for org.springframework.test.web.servlet.MockMvc mx.com.restaurante.test.controller.ReservacionTestController.mockMvc
[DEBUG] Returning cached instance of singleton bean 'mockMvc'
[DEBUG] Autowiring by type from bean name 'mx.com.restaurante.test.controller.ReservacionTestController' to bean named 'mockMvc'
[DEBUG] Processing injected element of bean 'mx.com.restaurante.test.controller.ReservacionTestController': AutowiredFieldElement for mx.com.restaurante.service.ClienteService mx.com.restaurante.test.controller.ReservacionTestController.clienteService
[DEBUG] Returning cached instance of singleton bean 'clienteServiceImpl'
[DEBUG] Autowiring by type from bean name 'mx.com.restaurante.test.controller.ReservacionTestController' to bean named 'clienteServiceImpl'
[DEBUG] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] Before test method: context [DefaultTestContext@4b54ce3e testClass = ReservacionTestController, testInstance = mx.com.restaurante.test.controller.ReservacionTestController@503e49b9, testMethod = recibirClienteHome@ReservacionTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 20, missCount = 1]
[DEBUG] Returning cached instance of singleton bean 'org.springframework.boot.test.mock.mockito.MockitoBeans'
[DEBUG] Entrando a buscarClienteXNombre
[DEBUG] Creating new EntityManager for shared EntityManager invocation
[DEBUG] Rendered criteria query -> select generatedAlias0 from Cliente as generatedAlias0 where generatedAlias0.nombre=:param0
[DEBUG] parse() - HQL: select generatedAlias0 from mx.com.restaurante.domain.Cliente as generatedAlias0 where generatedAlias0.nombre=:param0
[DEBUG] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'mx'
    |  |     |  |  |  |  \-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'restaurante'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Cliente'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'nombre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] throwQueryException() : no errors
[DEBUG] select << begin [level=1, statement=select]
[DEBUG] FromClause{level=1} : mx.com.restaurante.domain.Cliente (generatedAlias0) -> cliente0_
[DEBUG] Resolved : generatedAlias0 -> cliente0_.idcliente
[DEBUG] Resolved : generatedAlias0 -> cliente0_.idcliente
[DEBUG] getDataType() : nombre -> org.hibernate.type.StringType@4b32ef00
[DEBUG] Resolved : generatedAlias0.nombre -> cliente0_.nombre
[DEBUG] select : finishing up [level=1, statement=select]
[DEBUG] processQuery() :  ( SELECT ( {select clause} cliente0_.idcliente ) ( FromClause{level=1} cliente cliente0_ ) ( where ( = ( cliente0_.nombre cliente0_.idcliente nombre ) ? ) ) )
[DEBUG] Using FROM fragment [cliente cliente0_]
[DEBUG] select >> end [level=1, statement=select]
[DEBUG] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cliente)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cliente0_.idcliente as idclient1_0_' {alias=generatedAlias0, className=mx.com.restaurante.domain.Cliente, tableAlias=cliente0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cliente0_.comentario as comentar2_0_, cliente0_.email as email3_0_, cliente0_.nombre as nombre4_0_, cliente0_.telefono as telefono5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cliente0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'cliente cliente0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cliente,tableAlias=cliente0_,origin=null,columns={,className=mx.com.restaurante.domain.Cliente}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'cliente0_.nombre' {propertyName=nombre,dereferenceType=PRIMITIVE,getPropertyPath=nombre,path=generatedAlias0.nombre,tableAlias=cliente0_,className=mx.com.restaurante.domain.Cliente,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'cliente0_.idcliente' {alias=generatedAlias0, className=mx.com.restaurante.domain.Cliente, tableAlias=cliente0_}
          |  \-[IDENT] IdentNode: 'nombre' {originalText=nombre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@4b32ef00}

[DEBUG] throwQueryException() : no errors
[DEBUG] HQL: select generatedAlias0 from mx.com.restaurante.domain.Cliente as generatedAlias0 where generatedAlias0.nombre=:param0
[DEBUG] SQL: select cliente0_.idcliente as idclient1_0_, cliente0_.comentario as comentar2_0_, cliente0_.email as email3_0_, cliente0_.nombre as nombre4_0_, cliente0_.telefono as telefono5_0_ from cliente cliente0_ where cliente0_.nombre=?
[DEBUG] throwQueryException() : no errors
[DEBUG] select cliente0_.idcliente as idclient1_0_, cliente0_.comentario as comentar2_0_, cliente0_.email as email3_0_, cliente0_.nombre as nombre4_0_, cliente0_.telefono as telefono5_0_ from cliente cliente0_ where cliente0_.nombre=?
Hibernate: select cliente0_.idcliente as idclient1_0_, cliente0_.comentario as comentar2_0_, cliente0_.email as email3_0_, cliente0_.nombre as nombre4_0_, cliente0_.telefono as telefono5_0_ from cliente cliente0_ where cliente0_.nombre=?
[DEBUG] Result set row: 0
[DEBUG] Result row: EntityKey[mx.com.restaurante.domain.Cliente#90]
[DEBUG] Resolving associations for [mx.com.restaurante.domain.Cliente#90]
[DEBUG] Done materializing entity [mx.com.restaurante.domain.Cliente#90]
[DEBUG] Loading collection: [mx.com.restaurante.domain.Cliente.reservaciones#90]
[DEBUG] select reservacio0_.idcliente as idclient6_1_0_, reservacio0_.idreservacion as idreserv1_1_0_, reservacio0_.idreservacion as idreserv1_1_1_, reservacio0_.idcliente as idclient6_1_1_, reservacio0_.fecha as fecha2_1_1_, reservacio0_.horario as horario3_1_1_, reservacio0_.num_mesas as num_mesa4_1_1_, reservacio0_.num_personas as num_pers5_1_1_ from reservacion reservacio0_ where reservacio0_.idcliente=?
Hibernate: select reservacio0_.idcliente as idclient6_1_0_, reservacio0_.idreservacion as idreserv1_1_0_, reservacio0_.idreservacion as idreserv1_1_1_, reservacio0_.idcliente as idclient6_1_1_, reservacio0_.fecha as fecha2_1_1_, reservacio0_.horario as horario3_1_1_, reservacio0_.num_mesas as num_mesa4_1_1_, reservacio0_.num_personas as num_pers5_1_1_ from reservacion reservacio0_ where reservacio0_.idcliente=?
[DEBUG] Preparing collection intializer : [mx.com.restaurante.domain.Cliente.reservaciones#90]
[DEBUG] Starting ResultSet row #0
[DEBUG] Found row of collection: [mx.com.restaurante.domain.Cliente.reservaciones#90]
[DEBUG] Resolving associations for [mx.com.restaurante.domain.Reservacion#97]
[DEBUG] Done materializing entity [mx.com.restaurante.domain.Reservacion#97]
[DEBUG] 1 collections were found in result set for role: mx.com.restaurante.domain.Cliente.reservaciones
[DEBUG] Collection fully initialized: [mx.com.restaurante.domain.Cliente.reservaciones#90]
[DEBUG] 1 collections initialized for role: mx.com.restaurante.domain.Cliente.reservaciones
[DEBUG] HHH000387: ResultSet's statement was not registered
[DEBUG] Done loading collection
[DEBUG] Closing JPA EntityManager
******* ID:90 ******
[DEBUG] Bound request context to thread: org.springframework.mock.web.MockHttpServletRequest@e20370e
[DEBUG] /reservacion/confirmacion at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
[DEBUG] /reservacion/confirmacion at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
[DEBUG] No HttpSession currently exists
[DEBUG] No SecurityContext was available from the HttpSession: null. A new one will be created.
[DEBUG] /reservacion/confirmacion at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
[DEBUG] Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@70c517f0
[DEBUG] /reservacion/confirmacion at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
[DEBUG] Trying to match using Ant [pattern='/logout', GET]
[DEBUG] Request 'POST /reservacion/confirmacion' doesn't match 'GET /logout
[DEBUG] Trying to match using Ant [pattern='/logout', POST]
[DEBUG] Checking match of request : '/reservacion/confirmacion'; against '/logout'
[DEBUG] Trying to match using Ant [pattern='/logout', PUT]
[DEBUG] Request 'POST /reservacion/confirmacion' doesn't match 'PUT /logout
[DEBUG] Trying to match using Ant [pattern='/logout', DELETE]
[DEBUG] Request 'POST /reservacion/confirmacion' doesn't match 'DELETE /logout
[DEBUG] No matches found
[DEBUG] /reservacion/confirmacion at position 5 of 11 in additional filter chain; firing Filter: 'UsernamePasswordAuthenticationFilter'
[DEBUG] Checking match of request : '/reservacion/confirmacion'; against '/login'
[DEBUG] /reservacion/confirmacion at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
[DEBUG] /reservacion/confirmacion at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
[DEBUG] /reservacion/confirmacion at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
[DEBUG] Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@9055e4a6: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@957e: RemoteIpAddress: 127.0.0.1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS'
[DEBUG] /reservacion/confirmacion at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
[DEBUG] /reservacion/confirmacion at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
[DEBUG] /reservacion/confirmacion at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
[DEBUG] Trying to match using Ant [pattern='/logout', GET]
[DEBUG] Request 'POST /reservacion/confirmacion' doesn't match 'GET /logout
[DEBUG] Trying to match using Ant [pattern='/logout', POST]
[DEBUG] Checking match of request : '/reservacion/confirmacion'; against '/logout'
[DEBUG] Trying to match using Ant [pattern='/logout', PUT]
[DEBUG] Request 'POST /reservacion/confirmacion' doesn't match 'PUT /logout
[DEBUG] Trying to match using Ant [pattern='/logout', DELETE]
[DEBUG] Request 'POST /reservacion/confirmacion' doesn't match 'DELETE /logout
[DEBUG] No matches found
[DEBUG] Checking match of request : '/reservacion/confirmacion'; against '/'
[DEBUG] Checking match of request : '/reservacion/confirmacion'; against '/home'
[DEBUG] Checking match of request : '/reservacion/confirmacion'; against '/reservacion'
[DEBUG] Checking match of request : '/reservacion/confirmacion'; against '/reservacion/confirmacion*'
[DEBUG] Secure object: FilterInvocation: URL: /reservacion/confirmacion; Attributes: [permitAll]
[DEBUG] Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@9055e4a6: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@957e: RemoteIpAddress: 127.0.0.1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS
[DEBUG] Voter: org.springframework.security.web.access.expression.WebExpressionVoter@6bfa2f2e, returned: 1
[DEBUG] Authorization successful
[DEBUG] RunAsManager did not change Authentication object
[DEBUG] /reservacion/confirmacion reached end of additional filter chain; proceeding with original chain
[DEBUG] DispatcherServlet with name '' processing POST request for [/reservacion/confirmacion]
[DEBUG] Looking up handler method for path /reservacion/confirmacion
[DEBUG] Returning handler method [public java.lang.String mx.com.restaurante.controller.ReservacionController.registrarReservacionCliente(java.util.Date,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Long)]
[DEBUG] Returning cached instance of singleton bean 'reservacionController'
[DEBUG] Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
[DEBUG] Entre a registrarReservacionCliente
[DEBUG] Adding transactional method 'findOne' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
[DEBUG] Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@79ed6ae5] for JPA transaction
[DEBUG] Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
[DEBUG] Setting JDBC Connection [ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@726024e5]]] read-only
[DEBUG] begin
[DEBUG] Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@788d5aa4]
[DEBUG] select cliente0_.idcliente as idclient1_0_0_, cliente0_.comentario as comentar2_0_0_, cliente0_.email as email3_0_0_, cliente0_.nombre as nombre4_0_0_, cliente0_.telefono as telefono5_0_0_, reservacio1_.idcliente as idclient6_1_1_, reservacio1_.idreservacion as idreserv1_1_1_, reservacio1_.idreservacion as idreserv1_1_2_, reservacio1_.idcliente as idclient6_1_2_, reservacio1_.fecha as fecha2_1_2_, reservacio1_.horario as horario3_1_2_, reservacio1_.num_mesas as num_mesa4_1_2_, reservacio1_.num_personas as num_pers5_1_2_ from cliente cliente0_ left outer join reservacion reservacio1_ on cliente0_.idcliente=reservacio1_.idcliente where cliente0_.idcliente=?
Hibernate: select cliente0_.idcliente as idclient1_0_0_, cliente0_.comentario as comentar2_0_0_, cliente0_.email as email3_0_0_, cliente0_.nombre as nombre4_0_0_, cliente0_.telefono as telefono5_0_0_, reservacio1_.idcliente as idclient6_1_1_, reservacio1_.idreservacion as idreserv1_1_1_, reservacio1_.idreservacion as idreserv1_1_2_, reservacio1_.idcliente as idclient6_1_2_, reservacio1_.fecha as fecha2_1_2_, reservacio1_.horario as horario3_1_2_, reservacio1_.num_mesas as num_mesa4_1_2_, reservacio1_.num_personas as num_pers5_1_2_ from cliente cliente0_ left outer join reservacion reservacio1_ on cliente0_.idcliente=reservacio1_.idcliente where cliente0_.idcliente=?
[DEBUG] Starting ResultSet row #0
[DEBUG] On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] Found row of collection: [mx.com.restaurante.domain.Cliente.reservaciones#90]
[DEBUG] Resolving associations for [mx.com.restaurante.domain.Cliente#90]
[DEBUG] Done materializing entity [mx.com.restaurante.domain.Cliente#90]
[DEBUG] Resolving associations for [mx.com.restaurante.domain.Reservacion#97]
[DEBUG] Done materializing entity [mx.com.restaurante.domain.Reservacion#97]
[DEBUG] 1 collections were found in result set for role: mx.com.restaurante.domain.Cliente.reservaciones
[DEBUG] Collection fully initialized: [mx.com.restaurante.domain.Cliente.reservaciones#90]
[DEBUG] 1 collections initialized for role: mx.com.restaurante.domain.Cliente.reservaciones
[DEBUG] HHH000387: ResultSet's statement was not registered
[DEBUG] Done entity load : mx.com.restaurante.domain.Cliente#90
[DEBUG] Initiating transaction commit
[DEBUG] Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@79ed6ae5]
[DEBUG] committing
[DEBUG] Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@726024e5]]]
[DEBUG] Not closing pre-bound JPA EntityManager after transaction
[DEBUG] Adding transactional method 'save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@79ed6ae5] for JPA transaction
[DEBUG] Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] begin
[DEBUG] Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@636e0e21]
[DEBUG] Executing identity-insert immediately
[DEBUG] insert into reservacion (idcliente, fecha, horario, num_mesas, num_personas) values (?, ?, ?, ?, ?)
Hibernate: insert into reservacion (idcliente, fecha, horario, num_mesas, num_personas) values (?, ?, ?, ?, ?)
[DEBUG] Natively generated identity: 98
[DEBUG] HHH000387: ResultSet's statement was not registered
[DEBUG] Initiating transaction commit
[DEBUG] Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@79ed6ae5]
[DEBUG] committing
[DEBUG] Processing flush-time cascades
[DEBUG] Dirty checking collections
[DEBUG] Collection found: [mx.com.restaurante.domain.Cliente.reservaciones#90], was: [mx.com.restaurante.domain.Cliente.reservaciones#90] (initialized)
[DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[DEBUG] Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] Listing entities:
[DEBUG] mx.com.restaurante.domain.Reservacion{numMesas=1, numPersonas=2, cliente=mx.com.restaurante.domain.Cliente#90, fecha=2017-06-09 00:00:00.0, horario=12:30, id=97}
[DEBUG] mx.com.restaurante.domain.Cliente{reservaciones=[mx.com.restaurante.domain.Reservacion#97], id=90, comentario=Primera prueba de insertar clientes en la BD con su respectiva reservacion, telefono=5517373377, nombre=Christian, email=kriztianfv97@gmail.com}
[DEBUG] mx.com.restaurante.domain.Reservacion{numMesas=1, numPersonas=3, cliente=mx.com.restaurante.domain.Cliente#90, fecha=Sun Nov 12 00:00:00 CST 2017, horario=17:30, id=98}
[DEBUG] Not closing pre-bound JPA EntityManager after transaction
[DEBUG] Found key 'support.email' in [class path resource [mail.properties]] with type [String]
[DEBUG] Se envio el correo correctamente
[DEBUG] Requested media types are [*/*] based on Accept header types and producible media types [*/*])
[DEBUG] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] Invoking afterPropertiesSet() on bean with name 'confirmacion'
[DEBUG] Returning [org.thymeleaf.spring4.view.ThymeleafView@376b2980] based on requested media type '*/*'
[DEBUG] Rendering view [org.thymeleaf.spring4.view.ThymeleafView@376b2980] in DispatcherServlet with name ''
[DEBUG] Returning cached instance of singleton bean 'requestDataValueProcessor'
[DEBUG] [THYMELEAF][Test worker] STARTING PROCESS OF TEMPLATE "confirmacion" WITH LOCALE en
[DEBUG] [THYMELEAF][Test worker] Template "confirmacion" was correctly resolved as resource "classpath:/templates/confirmacion.html" in mode HTML5 with resource resolver "SPRING-RESOURCE"
[DEBUG] [THYMELEAF][Test worker] Starting process on template "confirmacion" using mode "HTML5"
[DEBUG] [THYMELEAF][Test worker] Finished process on template "confirmacion" using mode "HTML5"
[DEBUG] SecurityContext is empty or contents are anonymous - context will not be stored in HttpSession.
[DEBUG] [THYMELEAF][Test worker] FINISHED PROCESS AND OUTPUT OF TEMPLATE "confirmacion" WITH LOCALE en
[DEBUG] [THYMELEAF][Test worker][confirmacion][en][3425506][3] TEMPLATE "confirmacion" WITH LOCALE en PROCESSED IN 3425506 nanoseconds (approx. 3ms)
[DEBUG] Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
[DEBUG] Closing JPA EntityManager
[DEBUG] Successfully completed request
[DEBUG] Chain processed normally
[DEBUG] SecurityContextHolder now cleared, as request processing completed
[DEBUG] Cleared thread-bound request context: org.springframework.mock.web.MockHttpServletRequest@e20370e
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 21, missCount = 1]
[DEBUG] Returning cached instance of singleton bean 'org.springframework.boot.test.mock.mockito.MockitoBeans'
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 22, missCount = 1]
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 23, missCount = 1]
[DEBUG] After test method: context [DefaultTestContext@4b54ce3e testClass = ReservacionTestController, testInstance = mx.com.restaurante.test.controller.ReservacionTestController@503e49b9, testMethod = recibirClienteHome@ReservacionTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG] Resetting RequestContextHolder for test context [DefaultTestContext@4b54ce3e testClass = ReservacionTestController, testInstance = mx.com.restaurante.test.controller.ReservacionTestController@503e49b9, testMethod = recibirClienteHome@ReservacionTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
[DEBUG] Retrieved @ProfileValueSourceConfiguration [null] for test class [mx.com.restaurante.test.controller.ReservacionTestController]
[DEBUG] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [mx.com.restaurante.test.controller.ReservacionTestController]
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 24, missCount = 1]
[DEBUG] Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4b54ce3e testClass = ReservacionTestController, testInstance = mx.com.restaurante.test.controller.ReservacionTestController@2299250e, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
[DEBUG] Performing dependency injection for test context [[DefaultTestContext@4b54ce3e testClass = ReservacionTestController, testInstance = mx.com.restaurante.test.controller.ReservacionTestController@2299250e, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]].
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 25, missCount = 1]
[DEBUG] Processing injected element of bean 'mx.com.restaurante.test.controller.ReservacionTestController': AutowiredFieldElement for org.springframework.test.web.servlet.MockMvc mx.com.restaurante.test.controller.ReservacionTestController.mockMvc
[DEBUG] Returning cached instance of singleton bean 'mockMvc'
[DEBUG] Processing injected element of bean 'mx.com.restaurante.test.controller.ReservacionTestController': AutowiredFieldElement for mx.com.restaurante.service.ClienteService mx.com.restaurante.test.controller.ReservacionTestController.clienteService
[DEBUG] Returning cached instance of singleton bean 'clienteServiceImpl'
[DEBUG] Before test method: context [DefaultTestContext@4b54ce3e testClass = ReservacionTestController, testInstance = mx.com.restaurante.test.controller.ReservacionTestController@2299250e, testMethod = probarReservacion@ReservacionTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 26, missCount = 1]
[DEBUG] Returning cached instance of singleton bean 'org.springframework.boot.test.mock.mockito.MockitoBeans'
[DEBUG] Bound request context to thread: org.springframework.mock.web.MockHttpServletRequest@6b083692
[DEBUG] /reservacion at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
[DEBUG] /reservacion at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
[DEBUG] No HttpSession currently exists
[DEBUG] No SecurityContext was available from the HttpSession: null. A new one will be created.
[DEBUG] /reservacion at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
[DEBUG] Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@70c517f0
[DEBUG] /reservacion at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
[DEBUG] Trying to match using Ant [pattern='/logout', GET]
[DEBUG] Checking match of request : '/reservacion'; against '/logout'
[DEBUG] Trying to match using Ant [pattern='/logout', POST]
[DEBUG] Request 'GET /reservacion' doesn't match 'POST /logout
[DEBUG] Trying to match using Ant [pattern='/logout', PUT]
[DEBUG] Request 'GET /reservacion' doesn't match 'PUT /logout
[DEBUG] Trying to match using Ant [pattern='/logout', DELETE]
[DEBUG] Request 'GET /reservacion' doesn't match 'DELETE /logout
[DEBUG] No matches found
[DEBUG] /reservacion at position 5 of 11 in additional filter chain; firing Filter: 'UsernamePasswordAuthenticationFilter'
[DEBUG] Request 'GET /reservacion' doesn't match 'POST /login
[DEBUG] /reservacion at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
[DEBUG] /reservacion at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
[DEBUG] /reservacion at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
[DEBUG] Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@9055e4a6: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@957e: RemoteIpAddress: 127.0.0.1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS'
[DEBUG] /reservacion at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
[DEBUG] /reservacion at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
[DEBUG] /reservacion at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
[DEBUG] Trying to match using Ant [pattern='/logout', GET]
[DEBUG] Checking match of request : '/reservacion'; against '/logout'
[DEBUG] Trying to match using Ant [pattern='/logout', POST]
[DEBUG] Request 'GET /reservacion' doesn't match 'POST /logout
[DEBUG] Trying to match using Ant [pattern='/logout', PUT]
[DEBUG] Request 'GET /reservacion' doesn't match 'PUT /logout
[DEBUG] Trying to match using Ant [pattern='/logout', DELETE]
[DEBUG] Request 'GET /reservacion' doesn't match 'DELETE /logout
[DEBUG] No matches found
[DEBUG] Checking match of request : '/reservacion'; against '/'
[DEBUG] Checking match of request : '/reservacion'; against '/home'
[DEBUG] Checking match of request : '/reservacion'; against '/reservacion'
[DEBUG] Secure object: FilterInvocation: URL: /reservacion; Attributes: [permitAll]
[DEBUG] Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@9055e4a6: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@957e: RemoteIpAddress: 127.0.0.1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS
[DEBUG] Voter: org.springframework.security.web.access.expression.WebExpressionVoter@6bfa2f2e, returned: 1
[DEBUG] Authorization successful
[DEBUG] RunAsManager did not change Authentication object
[DEBUG] /reservacion reached end of additional filter chain; proceeding with original chain
[DEBUG] DispatcherServlet with name '' processing GET request for [/reservacion]
[DEBUG] Looking up handler method for path /reservacion
[DEBUG] Returning handler method [public java.lang.String mx.com.restaurante.controller.ReservacionController.reservacion(java.util.Map<java.lang.String, java.lang.Object>)]
[DEBUG] Returning cached instance of singleton bean 'reservacionController'
[DEBUG] Last-Modified value for [/reservacion] is: -1
[DEBUG] Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
[DEBUG] Entre a reservacion
[DEBUG] Requested media types are [*/*] based on Accept header types and producible media types [*/*])
[DEBUG] Returning [org.thymeleaf.spring4.view.ThymeleafView@6294e4ba] based on requested media type '*/*'
[DEBUG] Rendering view [org.thymeleaf.spring4.view.ThymeleafView@6294e4ba] in DispatcherServlet with name ''
[DEBUG] Returning cached instance of singleton bean 'requestDataValueProcessor'
[DEBUG] [THYMELEAF][Test worker] STARTING PROCESS OF TEMPLATE "reservacion" WITH LOCALE en
[DEBUG] [THYMELEAF][Test worker] Starting process on template "reservacion" using mode "HTML5"
[DEBUG] [THYMELEAF][Test worker] Finished process on template "reservacion" using mode "HTML5"
[DEBUG] SecurityContext is empty or contents are anonymous - context will not be stored in HttpSession.
[DEBUG] [THYMELEAF][Test worker] FINISHED PROCESS AND OUTPUT OF TEMPLATE "reservacion" WITH LOCALE en
[DEBUG] [THYMELEAF][Test worker][reservacion][en][3610252][4] TEMPLATE "reservacion" WITH LOCALE en PROCESSED IN 3610252 nanoseconds (approx. 4ms)
[DEBUG] Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
[DEBUG] Closing JPA EntityManager
[DEBUG] Successfully completed request
[DEBUG] Chain processed normally
[DEBUG] SecurityContextHolder now cleared, as request processing completed
[DEBUG] Cleared thread-bound request context: org.springframework.mock.web.MockHttpServletRequest@6b083692
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 27, missCount = 1]
[DEBUG] Returning cached instance of singleton bean 'org.springframework.boot.test.mock.mockito.MockitoBeans'
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 28, missCount = 1]
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 29, missCount = 1]
[DEBUG] After test method: context [DefaultTestContext@4b54ce3e testClass = ReservacionTestController, testInstance = mx.com.restaurante.test.controller.ReservacionTestController@2299250e, testMethod = probarReservacion@ReservacionTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG] Resetting RequestContextHolder for test context [DefaultTestContext@4b54ce3e testClass = ReservacionTestController, testInstance = mx.com.restaurante.test.controller.ReservacionTestController@2299250e, testMethod = probarReservacion@ReservacionTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
[DEBUG] After test class: context [DefaultTestContext@4b54ce3e testClass = ReservacionTestController, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36feea6e testClass = ReservacionTestController, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@adc06f1 key = [Package Import mx.com.restaurante.test.controller, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration]], org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e7e8512, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
