<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="mx.com.restaurante.test.domain.ClienteDomainTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2017-06-09T16:30:29" hostname="Christian-FV" time="1.111">
  <properties/>
  <testcase name="actualizarClienteTest" classname="mx.com.restaurante.test.domain.ClienteDomainTest" time="1.111"/>
  <system-out><![CDATA[[DEBUG] SpringJUnit4ClassRunner constructor called with [class mx.com.restaurante.test.domain.ClienteDomainTest]
[DEBUG] Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
[DEBUG] Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
[DEBUG] Instantiating TestContextBootstrapper for test class [mx.com.restaurante.test.domain.ClienteDomainTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
[INFO] Neither @ContextConfiguration nor @ContextHierarchy found for test class [mx.com.restaurante.test.domain.ClienteDomainTest], using SpringBootContextLoader
[DEBUG] Did not detect default resource location for test class [mx.com.restaurante.test.domain.ClienteDomainTest]: class path resource [mx/com/restaurante/test/domain/ClienteDomainTest-context.xml] does not exist
[DEBUG] Did not detect default resource location for test class [mx.com.restaurante.test.domain.ClienteDomainTest]: class path resource [mx/com/restaurante/test/domain/ClienteDomainTestContext.groovy] does not exist
[INFO] Could not detect default resource locations for test class [mx.com.restaurante.test.domain.ClienteDomainTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[DEBUG] Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [mx.com.restaurante.test.domain.ClienteDomainTest]
[DEBUG] @TestExecutionListeners is not present for class [mx.com.restaurante.test.domain.ClienteDomainTest]: using defaults.
[INFO] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@48cfcd0, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@30d4699, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1fa86105, org.springframework.test.context.support.DirtiesContextTestExecutionListener@752231d6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@16ab39de, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7ffb8c1c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@23876aaf, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@47cf5388, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@8e5f766, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2bdd010a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3397d4cc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@ef99225]
[DEBUG] Retrieved @ProfileValueSourceConfiguration [null] for test class [mx.com.restaurante.test.domain.ClienteDomainTest]
[DEBUG] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [mx.com.restaurante.test.domain.ClienteDomainTest]
[DEBUG] Retrieved @ProfileValueSourceConfiguration [null] for test class [mx.com.restaurante.test.domain.ClienteDomainTest]
[DEBUG] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [mx.com.restaurante.test.domain.ClienteDomainTest]
[DEBUG] Before test class: context [DefaultTestContext@29800a5b testClass = ClienteDomainTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
[DEBUG] Retrieved @ProfileValueSourceConfiguration [null] for test class [mx.com.restaurante.test.domain.ClienteDomainTest]
[DEBUG] Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [mx.com.restaurante.test.domain.ClienteDomainTest]
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 2, maxSize = 32, parentContextCount = 0, hitCount = 35, missCount = 2]
[DEBUG] Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@29800a5b testClass = ClienteDomainTest, testInstance = mx.com.restaurante.test.domain.ClienteDomainTest@67aa030a, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
[DEBUG] Performing dependency injection for test context [[DefaultTestContext@29800a5b testClass = ClienteDomainTest, testInstance = mx.com.restaurante.test.domain.ClienteDomainTest@67aa030a, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]].
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 2, maxSize = 32, parentContextCount = 0, hitCount = 36, missCount = 2]
[DEBUG] Processing injected element of bean 'mx.com.restaurante.test.domain.ClienteDomainTest': AutowiredFieldElement for mx.com.restaurante.domain.repository.ClienteRepository mx.com.restaurante.test.domain.ClienteDomainTest.clienteRepository
[DEBUG] Returning cached instance of singleton bean 'clienteRepository'
[DEBUG] Autowiring by type from bean name 'mx.com.restaurante.test.domain.ClienteDomainTest' to bean named 'clienteRepository'
[DEBUG] Processing injected element of bean 'mx.com.restaurante.test.domain.ClienteDomainTest': AutowiredFieldElement for mx.com.restaurante.domain.repository.ReservacionRepository mx.com.restaurante.test.domain.ClienteDomainTest.reservacionRepository
[DEBUG] Returning cached instance of singleton bean 'reservacionRepository'
[DEBUG] Autowiring by type from bean name 'mx.com.restaurante.test.domain.ClienteDomainTest' to bean named 'reservacionRepository'
[DEBUG] Processing injected element of bean 'mx.com.restaurante.test.domain.ClienteDomainTest': AutowiredFieldElement for javax.sql.DataSource mx.com.restaurante.test.domain.ClienteDomainTest.dataSource
[DEBUG] Returning cached instance of singleton bean 'dataSource'
[DEBUG] Autowiring by type from bean name 'mx.com.restaurante.test.domain.ClienteDomainTest' to bean named 'dataSource'
[DEBUG] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] Before test method: context [DefaultTestContext@29800a5b testClass = ClienteDomainTest, testInstance = mx.com.restaurante.test.domain.ClienteDomainTest@67aa030a, testMethod = actualizarClienteTest@ClienteDomainTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 2, maxSize = 32, parentContextCount = 0, hitCount = 37, missCount = 2]
[DEBUG] Returning cached instance of singleton bean 'org.springframework.boot.test.mock.mockito.MockitoBeans'
[DEBUG] Database connection info: 
	database product name=MySQL
	database version=5.6.17
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
	jdbc driver major version=5
	jdbc driver minor version=1

[DEBUG] validateSchema(validateStrict=false) - start
[DEBUG] Schema is null. Nothing to validate.
[DEBUG] Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
[DEBUG] Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
[DEBUG] setConsumer(consumer) - start
[DEBUG] produce() - start
[DEBUG] setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@37e6e08f, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@63237b39) - start
[DEBUG] setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@37e6e08f, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@63237b39) - start
[DEBUG] startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@253c658e) - start
[DEBUG] startDataSet() - start
[DEBUG] startElement(uri=, localName=, qName=reservacion, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@253c658e) - start
[DEBUG] getLastTableName() - start
[DEBUG] isLastTable(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] createTableMetaData(tableName=reservacion, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@253c658e) - start
[DEBUG] getColumns(columnNames=[], columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)]) - start
[DEBUG] add(tableName=reservacion, object=tableName=reservacion, columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)], keys=[]) - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableName(tableName=RESERVACION) - start
[DEBUG] getTableName(tableName=RESERVACION) - end - result=RESERVACION
[DEBUG] startTable(metaData=tableName=reservacion, columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)], keys=[]) - start
[DEBUG] getLastTableName() - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getColumnIndex(columnName=idreservacion) - start
[DEBUG] getColumnIndex(columnName=fecha) - start
[DEBUG] getColumnIndex(columnName=num_personas) - start
[DEBUG] getColumnIndex(columnName=num_mesas) - start
[DEBUG] getColumnIndex(columnName=horario) - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getLastTableName() - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] row(values=18) - start
[DEBUG] addRow(values=18) - start
[DEBUG] endElement(uri=, localName=, qName=reservacion) - start
[DEBUG] endElement(uri=, localName=, qName=dataset) - start
[DEBUG] getLastTableName() - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] endTable() - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] add(tableName=reservacion, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=reservacion, columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableName(tableName=RESERVACION) - start
[DEBUG] getTableName(tableName=RESERVACION) - end - result=RESERVACION
[DEBUG] endDataSet() - start
[DEBUG] endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[reservacion], _tableMap={RESERVACION=org.dbunit.dataset.DefaultTable[_metaData=tableName=reservacion, columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
[DEBUG] Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
[DEBUG] Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
[DEBUG] setConsumer(consumer) - start
[DEBUG] produce() - start
[DEBUG] setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@15f02660, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@f15998) - start
[DEBUG] setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@15f02660, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@f15998) - start
[DEBUG] startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@63806913) - start
[DEBUG] startDataSet() - start
[DEBUG] startElement(uri=, localName=, qName=cliente, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@63806913) - start
[DEBUG] getLastTableName() - start
[DEBUG] isLastTable(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] createTableMetaData(tableName=cliente, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@63806913) - start
[DEBUG] getColumns(columnNames=[], columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)]) - start
[DEBUG] add(tableName=cliente, object=tableName=cliente, columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)], keys=[]) - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableName(tableName=CLIENTE) - start
[DEBUG] getTableName(tableName=CLIENTE) - end - result=CLIENTE
[DEBUG] startTable(metaData=tableName=cliente, columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)], keys=[]) - start
[DEBUG] getLastTableName() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getColumnIndex(columnName=nombre) - start
[DEBUG] getColumnIndex(columnName=telefono) - start
[DEBUG] getColumnIndex(columnName=email) - start
[DEBUG] getColumnIndex(columnName=comentario) - start
[DEBUG] getLastTableName() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] row(values=18) - start
[DEBUG] addRow(values=18) - start
[DEBUG] endElement(uri=, localName=, qName=cliente) - start
[DEBUG] endElement(uri=, localName=, qName=dataset) - start
[DEBUG] getLastTableName() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] endTable() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] add(tableName=cliente, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=cliente, columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableName(tableName=CLIENTE) - start
[DEBUG] getTableName(tableName=CLIENTE) - end - result=CLIENTE
[DEBUG] endDataSet() - start
[DEBUG] endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[cliente], _tableMap={CLIENTE=org.dbunit.dataset.DefaultTable[_metaData=tableName=cliente, columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
[DEBUG] execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
[DEBUG] createDataSet() - start
[DEBUG] createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] iterator() - start
[DEBUG] createIterator(reversed=false) - start
[DEBUG] orderedValues() - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableMetaData() - start
[DEBUG] getTable() - start
[DEBUG] getTableMetaData(tableName=reservacion) - start
[DEBUG] initialize() - start
[DEBUG] Initializing the data set from the database...
[DEBUG] 
	database product name=MySQL
	database version=5.6.17
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
	jdbc driver major version=5
	jdbc driver minor version=1

[DEBUG] metadata resultset=com.mysql.jdbc.JDBC4ResultSet@1a13b843
[DEBUG] getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}]) - start
[DEBUG] Qualified table names feature is disabled. Returning plain table name
[DEBUG] getQualifiedName(prefix=null, name=cliente, escapePattern=null) - start
[DEBUG] add(tableName=cliente, object=null) - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableName(tableName=CLIENTE) - start
[DEBUG] getTableName(tableName=CLIENTE) - end - result=CLIENTE
[DEBUG] getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}]) - start
[DEBUG] Qualified table names feature is disabled. Returning plain table name
[DEBUG] getQualifiedName(prefix=null, name=reservacion, escapePattern=null) - start
[DEBUG] add(tableName=reservacion, object=null) - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableName(tableName=RESERVACION) - start
[DEBUG] getTableName(tableName=RESERVACION) - end - result=RESERVACION
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] isEscaped returns 'false' for tableName=reservacion (dbIdentifierQuoteString=`)
[DEBUG] Validating if table 'reservacion' exists in schema 'null' ...
[DEBUG] close(resultSet=com.mysql.jdbc.JDBC4ResultSet@1028f7dd) - start
[DEBUG] update(tableName=reservacion, object=table=reservacion, cols=[(idreservacion, INTEGER, noNulls), (fecha, DATE, noNulls), (num_personas, INTEGER, noNulls), (num_mesas, INTEGER, noNulls), (horario, VARCHAR, noNulls), (idcliente, INTEGER, nullable)], pk=[(idreservacion, INTEGER, noNulls)]) - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getQualifiedName(prefix=null, name=reservacion, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=reservacion, escapePattern=null) - start
[DEBUG] addBatch(sql=delete from reservacion) - start
[DEBUG] Added SQL: delete from reservacion
[DEBUG] executeBatch() - start
[DEBUG] DbUnit SQL: delete from reservacion
[DEBUG] clearBatch() - start
[DEBUG] close() - start
[DEBUG] execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
[DEBUG] createDataSet() - start
[DEBUG] createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] iterator() - start
[DEBUG] createIterator(reversed=false) - start
[DEBUG] orderedValues() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableMetaData() - start
[DEBUG] getTable() - start
[DEBUG] getTableMetaData(tableName=cliente) - start
[DEBUG] initialize() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] isEscaped returns 'false' for tableName=cliente (dbIdentifierQuoteString=`)
[DEBUG] Validating if table 'cliente' exists in schema 'null' ...
[DEBUG] close(resultSet=com.mysql.jdbc.JDBC4ResultSet@46a9b1ec) - start
[DEBUG] update(tableName=cliente, object=table=cliente, cols=[(idcliente, INTEGER, noNulls), (nombre, VARCHAR, noNulls), (telefono, VARCHAR, noNulls), (email, VARCHAR, noNulls), (comentario, VARCHAR, nullable)], pk=[(idcliente, INTEGER, noNulls)]) - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getQualifiedName(prefix=null, name=cliente, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=cliente, escapePattern=null) - start
[DEBUG] addBatch(sql=delete from cliente) - start
[DEBUG] Added SQL: delete from cliente
[DEBUG] executeBatch() - start
[DEBUG] DbUnit SQL: delete from cliente
[DEBUG] clearBatch() - start
[DEBUG] close() - start
[DEBUG] execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
[DEBUG] iterator() - start
[DEBUG] createIterator(reversed=false) - start
[DEBUG] orderedValues() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTable() - start
[DEBUG] isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=cliente, columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
[DEBUG] getValue(row=0, column=idcliente) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=cliente, columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)], keys=[]) - start
[DEBUG] createDataSet() - start
[DEBUG] getTableMetaData(tableName=cliente) - start
[DEBUG] initialize() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getColumns() - start
[DEBUG] getColumns() - start
[DEBUG] getColumnIndex(columnName=nombre) - start
[DEBUG] getColumns() - start
[DEBUG] getColumnIndex(columnName=telefono) - start
[DEBUG] getColumns() - start
[DEBUG] getColumnIndex(columnName=email) - start
[DEBUG] getColumns() - start
[DEBUG] getColumnIndex(columnName=comentario) - start
[DEBUG] getColumns() - start
[DEBUG] getPrimaryKeys() - start
[DEBUG] getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=cliente, columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=0) - start
[DEBUG] getValue(row=0, column=idcliente) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getValue(row=0, column=nombre) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=nombre) - start
[DEBUG] getColumnIndex(columnName=nombre) - start
[DEBUG] getValue(row=0, column=telefono) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=telefono) - start
[DEBUG] getColumnIndex(columnName=telefono) - start
[DEBUG] getValue(row=0, column=email) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=email) - start
[DEBUG] getColumnIndex(columnName=email) - start
[DEBUG] getValue(row=0, column=comentario) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=comentario) - start
[DEBUG] getColumnIndex(columnName=comentario) - start
[DEBUG] getOperationData(metaData=tableName=cliente, columns=[(idcliente, INTEGER, noNulls), (nombre, VARCHAR, noNulls), (telefono, VARCHAR, noNulls), (email, VARCHAR, noNulls), (comentario, VARCHAR, nullable)], keys=[(idcliente, INTEGER, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName(prefix=null, name=cliente, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=cliente, escapePattern=null) - start
[DEBUG] getQualifiedName(prefix=null, name=idcliente, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=idcliente, escapePattern=null) - start
[DEBUG] getQualifiedName(prefix=null, name=nombre, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=nombre, escapePattern=null) - start
[DEBUG] getQualifiedName(prefix=null, name=telefono, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=telefono, escapePattern=null) - start
[DEBUG] getQualifiedName(prefix=null, name=email, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=email, escapePattern=null) - start
[DEBUG] getQualifiedName(prefix=null, name=comentario, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=comentario, escapePattern=null) - start
[DEBUG] createPreparedBatchStatement(sql=insert into cliente (idcliente, nombre, telefono, email, comentario) values (?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getValue(row=0, column=idcliente) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] addValue(value=18, dataType=INTEGER) - start
[DEBUG] addValue(value=18, dataType=INTEGER) - start
[DEBUG] setSqlValue(value=18, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@27911d20: insert into cliente (idcliente, nombre, telefono, email, comentario) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
[DEBUG] typeCast(value=18) - start
[DEBUG] typeCast(value=18) - start
[DEBUG] getValue(row=0, column=nombre) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=nombre) - start
[DEBUG] getColumnIndex(columnName=nombre) - start
[DEBUG] addValue(value=Christian, dataType=VARCHAR) - start
[DEBUG] addValue(value=Christian, dataType=VARCHAR) - start
[DEBUG] setSqlValue(value=Christian, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@27911d20: insert into cliente (idcliente, nombre, telefono, email, comentario) values (18, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
[DEBUG] asString(value=Christian) - start
[DEBUG] typeCast(value=Christian) - start
[DEBUG] getValue(row=0, column=telefono) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=telefono) - start
[DEBUG] getColumnIndex(columnName=telefono) - start
[DEBUG] addValue(value=5517373377, dataType=VARCHAR) - start
[DEBUG] addValue(value=5517373377, dataType=VARCHAR) - start
[DEBUG] setSqlValue(value=5517373377, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@27911d20: insert into cliente (idcliente, nombre, telefono, email, comentario) values (18, 'Christian', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
[DEBUG] asString(value=5517373377) - start
[DEBUG] typeCast(value=5517373377) - start
[DEBUG] getValue(row=0, column=email) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=email) - start
[DEBUG] getColumnIndex(columnName=email) - start
[DEBUG] addValue(value=kriztianfv97@gmail.com, dataType=VARCHAR) - start
[DEBUG] addValue(value=kriztianfv97@gmail.com, dataType=VARCHAR) - start
[DEBUG] setSqlValue(value=kriztianfv97@gmail.com, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@27911d20: insert into cliente (idcliente, nombre, telefono, email, comentario) values (18, 'Christian', '5517373377', ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
[DEBUG] asString(value=kriztianfv97@gmail.com) - start
[DEBUG] typeCast(value=kriztianfv97@gmail.com) - start
[DEBUG] getValue(row=0, column=comentario) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=comentario) - start
[DEBUG] getColumnIndex(columnName=comentario) - start
[DEBUG] addValue(value=Primera prueba de insertar clientes en la BD con su respectiva reservacion, dataType=VARCHAR) - start
[DEBUG] addValue(value=Primera prueba de insertar clientes en la BD con su respectiva reservacion, dataType=VARCHAR) - start
[DEBUG] setSqlValue(value=Primera prueba de insertar clientes en la BD con su respectiva reservacion, column=5, statement=com.mysql.jdbc.JDBC4PreparedStatement@27911d20: insert into cliente (idcliente, nombre, telefono, email, comentario) values (18, 'Christian', '5517373377', 'kriztianfv97@gmail.com', ** NOT SPECIFIED **)) - start
[DEBUG] asString(value=Primera prueba de insertar clientes en la BD con su respectiva reservacion) - start
[DEBUG] typeCast(value=Primera prueba de insertar clientes en la BD con su respectiva reservacion) - start
[DEBUG] addBatch() - start
[DEBUG] addBatch() - start
[DEBUG] equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=cliente, columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=1) - start
[DEBUG] getValue(row=1, column=idcliente) - start
[DEBUG] assertValidRowIndex(row=1) - start
[DEBUG] assertValidRowIndex(row=1, rowCount=1) - start
[DEBUG] executeBatch() - start
[DEBUG] executeBatch() - start
[DEBUG] clearBatch() - start
[DEBUG] clearBatch() - start
[DEBUG] clearBatch() - start
[DEBUG] close() - start
[DEBUG] close() - start
[DEBUG] execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
[DEBUG] iterator() - start
[DEBUG] createIterator(reversed=false) - start
[DEBUG] orderedValues() - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTable() - start
[DEBUG] isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=reservacion, columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
[DEBUG] getValue(row=0, column=idreservacion) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=idreservacion) - start
[DEBUG] getColumnIndex(columnName=idreservacion) - start
[DEBUG] getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=reservacion, columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)], keys=[]) - start
[DEBUG] createDataSet() - start
[DEBUG] getTableMetaData(tableName=reservacion) - start
[DEBUG] initialize() - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getColumnIndex(columnName=idreservacion) - start
[DEBUG] getColumns() - start
[DEBUG] getColumns() - start
[DEBUG] getColumnIndex(columnName=fecha) - start
[DEBUG] getColumns() - start
[DEBUG] getColumnIndex(columnName=num_personas) - start
[DEBUG] getColumns() - start
[DEBUG] getColumnIndex(columnName=num_mesas) - start
[DEBUG] getColumns() - start
[DEBUG] getColumnIndex(columnName=horario) - start
[DEBUG] getColumns() - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getColumns() - start
[DEBUG] getPrimaryKeys() - start
[DEBUG] getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=reservacion, columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=0) - start
[DEBUG] getValue(row=0, column=idreservacion) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=idreservacion) - start
[DEBUG] getColumnIndex(columnName=idreservacion) - start
[DEBUG] getValue(row=0, column=fecha) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=fecha) - start
[DEBUG] getColumnIndex(columnName=fecha) - start
[DEBUG] getValue(row=0, column=num_personas) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=num_personas) - start
[DEBUG] getColumnIndex(columnName=num_personas) - start
[DEBUG] getValue(row=0, column=num_mesas) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=num_mesas) - start
[DEBUG] getColumnIndex(columnName=num_mesas) - start
[DEBUG] getValue(row=0, column=horario) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=horario) - start
[DEBUG] getColumnIndex(columnName=horario) - start
[DEBUG] getValue(row=0, column=idcliente) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getOperationData(metaData=tableName=reservacion, columns=[(idreservacion, INTEGER, noNulls), (fecha, DATE, noNulls), (num_personas, INTEGER, noNulls), (num_mesas, INTEGER, noNulls), (horario, VARCHAR, noNulls), (idcliente, INTEGER, nullable)], keys=[(idreservacion, INTEGER, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName(prefix=null, name=reservacion, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=reservacion, escapePattern=null) - start
[DEBUG] getQualifiedName(prefix=null, name=idreservacion, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=idreservacion, escapePattern=null) - start
[DEBUG] getQualifiedName(prefix=null, name=fecha, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=fecha, escapePattern=null) - start
[DEBUG] getQualifiedName(prefix=null, name=num_personas, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=num_personas, escapePattern=null) - start
[DEBUG] getQualifiedName(prefix=null, name=num_mesas, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=num_mesas, escapePattern=null) - start
[DEBUG] getQualifiedName(prefix=null, name=horario, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=horario, escapePattern=null) - start
[DEBUG] getQualifiedName(prefix=null, name=idcliente, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=idcliente, escapePattern=null) - start
[DEBUG] createPreparedBatchStatement(sql=insert into reservacion (idreservacion, fecha, num_personas, num_mesas, horario, idcliente) values (?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@5b2ed5af]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@39aa51dd], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@148468ea, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getValue(row=0, column=idreservacion) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=idreservacion) - start
[DEBUG] getColumnIndex(columnName=idreservacion) - start
[DEBUG] addValue(value=18, dataType=INTEGER) - start
[DEBUG] addValue(value=18, dataType=INTEGER) - start
[DEBUG] setSqlValue(value=18, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@57076092: insert into reservacion (idreservacion, fecha, num_personas, num_mesas, horario, idcliente) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
[DEBUG] typeCast(value=18) - start
[DEBUG] typeCast(value=18) - start
[DEBUG] getValue(row=0, column=fecha) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=fecha) - start
[DEBUG] getColumnIndex(columnName=fecha) - start
[DEBUG] addValue(value=2017-06-08, dataType=DATE) - start
[DEBUG] addValue(value=2017-06-08, dataType=DATE) - start
[DEBUG] setSqlValue(value=2017-06-08, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@57076092: insert into reservacion (idreservacion, fecha, num_personas, num_mesas, horario, idcliente) values (18, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
[DEBUG] typeCast(value=2017-06-08) - start
[DEBUG] getValue(row=0, column=num_personas) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=num_personas) - start
[DEBUG] getColumnIndex(columnName=num_personas) - start
[DEBUG] addValue(value=2, dataType=INTEGER) - start
[DEBUG] addValue(value=2, dataType=INTEGER) - start
[DEBUG] setSqlValue(value=2, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@57076092: insert into reservacion (idreservacion, fecha, num_personas, num_mesas, horario, idcliente) values (18, '2017-06-08', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
[DEBUG] typeCast(value=2) - start
[DEBUG] typeCast(value=2) - start
[DEBUG] getValue(row=0, column=num_mesas) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=num_mesas) - start
[DEBUG] getColumnIndex(columnName=num_mesas) - start
[DEBUG] addValue(value=1, dataType=INTEGER) - start
[DEBUG] addValue(value=1, dataType=INTEGER) - start
[DEBUG] setSqlValue(value=1, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@57076092: insert into reservacion (idreservacion, fecha, num_personas, num_mesas, horario, idcliente) values (18, '2017-06-08', 2, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
[DEBUG] typeCast(value=1) - start
[DEBUG] typeCast(value=1) - start
[DEBUG] getValue(row=0, column=horario) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=horario) - start
[DEBUG] getColumnIndex(columnName=horario) - start
[DEBUG] addValue(value=12:30, dataType=VARCHAR) - start
[DEBUG] addValue(value=12:30, dataType=VARCHAR) - start
[DEBUG] setSqlValue(value=12:30, column=5, statement=com.mysql.jdbc.JDBC4PreparedStatement@57076092: insert into reservacion (idreservacion, fecha, num_personas, num_mesas, horario, idcliente) values (18, '2017-06-08', 2, 1, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
[DEBUG] asString(value=12:30) - start
[DEBUG] typeCast(value=12:30) - start
[DEBUG] getValue(row=0, column=idcliente) - start
[DEBUG] assertValidRowIndex(row=0) - start
[DEBUG] assertValidRowIndex(row=0, rowCount=1) - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] addValue(value=18, dataType=INTEGER) - start
[DEBUG] addValue(value=18, dataType=INTEGER) - start
[DEBUG] setSqlValue(value=18, column=6, statement=com.mysql.jdbc.JDBC4PreparedStatement@57076092: insert into reservacion (idreservacion, fecha, num_personas, num_mesas, horario, idcliente) values (18, '2017-06-08', 2, 1, '12:30', ** NOT SPECIFIED **)) - start
[DEBUG] typeCast(value=18) - start
[DEBUG] typeCast(value=18) - start
[DEBUG] addBatch() - start
[DEBUG] addBatch() - start
[DEBUG] equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=reservacion, columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=1) - start
[DEBUG] getValue(row=1, column=idreservacion) - start
[DEBUG] assertValidRowIndex(row=1) - start
[DEBUG] assertValidRowIndex(row=1, rowCount=1) - start
[DEBUG] executeBatch() - start
[DEBUG] executeBatch() - start
[DEBUG] clearBatch() - start
[DEBUG] clearBatch() - start
[DEBUG] clearBatch() - start
[DEBUG] close() - start
[DEBUG] close() - start
[DEBUG] Entrando al metodo actualizarClienteTest
[DEBUG] Creating new EntityManager for shared EntityManager invocation
[DEBUG] Rendered criteria query -> select generatedAlias0 from Cliente as generatedAlias0 where generatedAlias0.nombre=:param0
[DEBUG] QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2cda17fc
[INFO] HHH000397: Using ASTQueryTranslatorFactory
[DEBUG] parse() - HQL: select generatedAlias0 from mx.com.restaurante.domain.Cliente as generatedAlias0 where generatedAlias0.nombre=:param0
[DEBUG] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'mx'
    |  |     |  |  |  |  \-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'restaurante'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Cliente'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'nombre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] throwQueryException() : no errors
[DEBUG] select << begin [level=1, statement=select]
[DEBUG] FromClause{level=1} : mx.com.restaurante.domain.Cliente (generatedAlias0) -> cliente0_
[DEBUG] Resolved : generatedAlias0 -> cliente0_.idcliente
[DEBUG] Resolved : generatedAlias0 -> cliente0_.idcliente
[DEBUG] getDataType() : nombre -> org.hibernate.type.StringType@4b32ef00
[DEBUG] Resolved : generatedAlias0.nombre -> cliente0_.nombre
[DEBUG] select : finishing up [level=1, statement=select]
[DEBUG] processQuery() :  ( SELECT ( {select clause} cliente0_.idcliente ) ( FromClause{level=1} cliente cliente0_ ) ( where ( = ( cliente0_.nombre cliente0_.idcliente nombre ) ? ) ) )
[DEBUG] Using FROM fragment [cliente cliente0_]
[DEBUG] select >> end [level=1, statement=select]
[DEBUG] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cliente)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cliente0_.idcliente as idclient1_0_' {alias=generatedAlias0, className=mx.com.restaurante.domain.Cliente, tableAlias=cliente0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cliente0_.comentario as comentar2_0_, cliente0_.email as email3_0_, cliente0_.nombre as nombre4_0_, cliente0_.telefono as telefono5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cliente0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'cliente cliente0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cliente,tableAlias=cliente0_,origin=null,columns={,className=mx.com.restaurante.domain.Cliente}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'cliente0_.nombre' {propertyName=nombre,dereferenceType=PRIMITIVE,getPropertyPath=nombre,path=generatedAlias0.nombre,tableAlias=cliente0_,className=mx.com.restaurante.domain.Cliente,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'cliente0_.idcliente' {alias=generatedAlias0, className=mx.com.restaurante.domain.Cliente, tableAlias=cliente0_}
          |  \-[IDENT] IdentNode: 'nombre' {originalText=nombre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@4b32ef00}

[DEBUG] throwQueryException() : no errors
[DEBUG] HQL: select generatedAlias0 from mx.com.restaurante.domain.Cliente as generatedAlias0 where generatedAlias0.nombre=:param0
[DEBUG] SQL: select cliente0_.idcliente as idclient1_0_, cliente0_.comentario as comentar2_0_, cliente0_.email as email3_0_, cliente0_.nombre as nombre4_0_, cliente0_.telefono as telefono5_0_ from cliente cliente0_ where cliente0_.nombre=?
[DEBUG] throwQueryException() : no errors
[DEBUG] select cliente0_.idcliente as idclient1_0_, cliente0_.comentario as comentar2_0_, cliente0_.email as email3_0_, cliente0_.nombre as nombre4_0_, cliente0_.telefono as telefono5_0_ from cliente cliente0_ where cliente0_.nombre=?
Hibernate: select cliente0_.idcliente as idclient1_0_, cliente0_.comentario as comentar2_0_, cliente0_.email as email3_0_, cliente0_.nombre as nombre4_0_, cliente0_.telefono as telefono5_0_ from cliente cliente0_ where cliente0_.nombre=?
[DEBUG] Result set row: 0
[DEBUG] Result row: EntityKey[mx.com.restaurante.domain.Cliente#18]
[DEBUG] Resolving associations for [mx.com.restaurante.domain.Cliente#18]
[DEBUG] Done materializing entity [mx.com.restaurante.domain.Cliente#18]
[DEBUG] Loading collection: [mx.com.restaurante.domain.Cliente.reservaciones#18]
[DEBUG] select reservacio0_.idcliente as idclient6_1_0_, reservacio0_.idreservacion as idreserv1_1_0_, reservacio0_.idreservacion as idreserv1_1_1_, reservacio0_.idcliente as idclient6_1_1_, reservacio0_.fecha as fecha2_1_1_, reservacio0_.horario as horario3_1_1_, reservacio0_.num_mesas as num_mesa4_1_1_, reservacio0_.num_personas as num_pers5_1_1_ from reservacion reservacio0_ where reservacio0_.idcliente=?
Hibernate: select reservacio0_.idcliente as idclient6_1_0_, reservacio0_.idreservacion as idreserv1_1_0_, reservacio0_.idreservacion as idreserv1_1_1_, reservacio0_.idcliente as idclient6_1_1_, reservacio0_.fecha as fecha2_1_1_, reservacio0_.horario as horario3_1_1_, reservacio0_.num_mesas as num_mesa4_1_1_, reservacio0_.num_personas as num_pers5_1_1_ from reservacion reservacio0_ where reservacio0_.idcliente=?
[DEBUG] Preparing collection intializer : [mx.com.restaurante.domain.Cliente.reservaciones#18]
[DEBUG] Starting ResultSet row #0
[DEBUG] Found row of collection: [mx.com.restaurante.domain.Cliente.reservaciones#18]
[DEBUG] Resolving associations for [mx.com.restaurante.domain.Reservacion#18]
[DEBUG] Done materializing entity [mx.com.restaurante.domain.Reservacion#18]
[DEBUG] 1 collections were found in result set for role: mx.com.restaurante.domain.Cliente.reservaciones
[DEBUG] Collection fully initialized: [mx.com.restaurante.domain.Cliente.reservaciones#18]
[DEBUG] 1 collections initialized for role: mx.com.restaurante.domain.Cliente.reservaciones
[DEBUG] HHH000387: ResultSet's statement was not registered
[DEBUG] Done loading collection
[DEBUG] Closing JPA EntityManager
[DEBUG] Adding transactional method 'save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] Returning cached instance of singleton bean 'transactionManager'
[DEBUG] Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1517be1] for JPA transaction
[DEBUG] begin
[DEBUG] Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@69dd84a5]
[DEBUG] EntityCopyObserver strategy: disallow
[DEBUG] Loading entity: [mx.com.restaurante.domain.Cliente#18]
[DEBUG] select cliente0_.idcliente as idclient1_0_1_, cliente0_.comentario as comentar2_0_1_, cliente0_.email as email3_0_1_, cliente0_.nombre as nombre4_0_1_, cliente0_.telefono as telefono5_0_1_, reservacio1_.idcliente as idclient6_1_3_, reservacio1_.idreservacion as idreserv1_1_3_, reservacio1_.idreservacion as idreserv1_1_0_, reservacio1_.idcliente as idclient6_1_0_, reservacio1_.fecha as fecha2_1_0_, reservacio1_.horario as horario3_1_0_, reservacio1_.num_mesas as num_mesa4_1_0_, reservacio1_.num_personas as num_pers5_1_0_ from cliente cliente0_ left outer join reservacion reservacio1_ on cliente0_.idcliente=reservacio1_.idcliente where cliente0_.idcliente=?
Hibernate: select cliente0_.idcliente as idclient1_0_1_, cliente0_.comentario as comentar2_0_1_, cliente0_.email as email3_0_1_, cliente0_.nombre as nombre4_0_1_, cliente0_.telefono as telefono5_0_1_, reservacio1_.idcliente as idclient6_1_3_, reservacio1_.idreservacion as idreserv1_1_3_, reservacio1_.idreservacion as idreserv1_1_0_, reservacio1_.idcliente as idclient6_1_0_, reservacio1_.fecha as fecha2_1_0_, reservacio1_.horario as horario3_1_0_, reservacio1_.num_mesas as num_mesa4_1_0_, reservacio1_.num_personas as num_pers5_1_0_ from cliente cliente0_ left outer join reservacion reservacio1_ on cliente0_.idcliente=reservacio1_.idcliente where cliente0_.idcliente=?
[DEBUG] Result set row: 0
[DEBUG] Result row: EntityKey[mx.com.restaurante.domain.Reservacion#18], EntityKey[mx.com.restaurante.domain.Cliente#18]
[DEBUG] Found row of collection: [mx.com.restaurante.domain.Cliente.reservaciones#18]
[DEBUG] Resolving associations for [mx.com.restaurante.domain.Reservacion#18]
[DEBUG] Done materializing entity [mx.com.restaurante.domain.Reservacion#18]
[DEBUG] Resolving associations for [mx.com.restaurante.domain.Cliente#18]
[DEBUG] Done materializing entity [mx.com.restaurante.domain.Cliente#18]
[DEBUG] 1 collections were found in result set for role: mx.com.restaurante.domain.Cliente.reservaciones
[DEBUG] Collection fully initialized: [mx.com.restaurante.domain.Cliente.reservaciones#18]
[DEBUG] 1 collections initialized for role: mx.com.restaurante.domain.Cliente.reservaciones
[DEBUG] Done entity load
[DEBUG] Executing identity-insert immediately
[DEBUG] insert into reservacion (idcliente, fecha, horario, num_mesas, num_personas) values (?, ?, ?, ?, ?)
Hibernate: insert into reservacion (idcliente, fecha, horario, num_mesas, num_personas) values (?, ?, ?, ?, ?)
[DEBUG] Natively generated identity: 99
[DEBUG] HHH000387: ResultSet's statement was not registered
[DEBUG] Initiating transaction commit
[DEBUG] Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1517be1]
[DEBUG] committing
[DEBUG] Processing flush-time cascades
[DEBUG] Dirty checking collections
[DEBUG] Collection dirty: [mx.com.restaurante.domain.Cliente.reservaciones#18]
[DEBUG] Collection found: [mx.com.restaurante.domain.Cliente.reservaciones#18], was: [mx.com.restaurante.domain.Cliente.reservaciones#18] (initialized)
[DEBUG] Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
[DEBUG] Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
[DEBUG] Listing entities:
[DEBUG] mx.com.restaurante.domain.Reservacion{numMesas=1, numPersonas=4, cliente=mx.com.restaurante.domain.Cliente#18, fecha=Fri Jun 09 11:30:30 CDT 2017, horario=20:30, id=99}
[DEBUG] mx.com.restaurante.domain.Reservacion{numMesas=1, numPersonas=2, cliente=mx.com.restaurante.domain.Cliente#18, fecha=2017-06-08 00:00:00.0, horario=12:30, id=18}
[DEBUG] mx.com.restaurante.domain.Cliente{reservaciones=[mx.com.restaurante.domain.Reservacion#99], id=18, comentario=Primera prueba de insertar clientes en la BD con su respectiva reservacion, telefono=5517373377, nombre=Chris, email=kriztianfv97@gmail.com}
[DEBUG] update cliente set comentario=?, email=?, nombre=?, telefono=? where idcliente=?
Hibernate: update cliente set comentario=?, email=?, nombre=?, telefono=? where idcliente=?
[DEBUG] Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1517be1] after transaction
[DEBUG] Closing JPA EntityManager
[DEBUG] HHH000420: Closing un-released batch
[DEBUG] Creating new EntityManager for shared EntityManager invocation
[DEBUG] Rendered criteria query -> select generatedAlias0 from Cliente as generatedAlias0 where generatedAlias0.nombre=:param0
[DEBUG] select cliente0_.idcliente as idclient1_0_, cliente0_.comentario as comentar2_0_, cliente0_.email as email3_0_, cliente0_.nombre as nombre4_0_, cliente0_.telefono as telefono5_0_ from cliente cliente0_ where cliente0_.nombre=?
Hibernate: select cliente0_.idcliente as idclient1_0_, cliente0_.comentario as comentar2_0_, cliente0_.email as email3_0_, cliente0_.nombre as nombre4_0_, cliente0_.telefono as telefono5_0_ from cliente cliente0_ where cliente0_.nombre=?
[DEBUG] Result set row: 0
[DEBUG] Result row: EntityKey[mx.com.restaurante.domain.Cliente#18]
[DEBUG] Resolving associations for [mx.com.restaurante.domain.Cliente#18]
[DEBUG] Done materializing entity [mx.com.restaurante.domain.Cliente#18]
[DEBUG] Loading collection: [mx.com.restaurante.domain.Cliente.reservaciones#18]
[DEBUG] select reservacio0_.idcliente as idclient6_1_0_, reservacio0_.idreservacion as idreserv1_1_0_, reservacio0_.idreservacion as idreserv1_1_1_, reservacio0_.idcliente as idclient6_1_1_, reservacio0_.fecha as fecha2_1_1_, reservacio0_.horario as horario3_1_1_, reservacio0_.num_mesas as num_mesa4_1_1_, reservacio0_.num_personas as num_pers5_1_1_ from reservacion reservacio0_ where reservacio0_.idcliente=?
Hibernate: select reservacio0_.idcliente as idclient6_1_0_, reservacio0_.idreservacion as idreserv1_1_0_, reservacio0_.idreservacion as idreserv1_1_1_, reservacio0_.idcliente as idclient6_1_1_, reservacio0_.fecha as fecha2_1_1_, reservacio0_.horario as horario3_1_1_, reservacio0_.num_mesas as num_mesa4_1_1_, reservacio0_.num_personas as num_pers5_1_1_ from reservacion reservacio0_ where reservacio0_.idcliente=?
[DEBUG] Preparing collection intializer : [mx.com.restaurante.domain.Cliente.reservaciones#18]
[DEBUG] Starting ResultSet row #0
[DEBUG] Found row of collection: [mx.com.restaurante.domain.Cliente.reservaciones#18]
[DEBUG] Starting ResultSet row #1
[DEBUG] Found row of collection: [mx.com.restaurante.domain.Cliente.reservaciones#18]
[DEBUG] Resolving associations for [mx.com.restaurante.domain.Reservacion#18]
[DEBUG] Done materializing entity [mx.com.restaurante.domain.Reservacion#18]
[DEBUG] Resolving associations for [mx.com.restaurante.domain.Reservacion#99]
[DEBUG] Done materializing entity [mx.com.restaurante.domain.Reservacion#99]
[DEBUG] 1 collections were found in result set for role: mx.com.restaurante.domain.Cliente.reservaciones
[DEBUG] Collection fully initialized: [mx.com.restaurante.domain.Cliente.reservaciones#18]
[DEBUG] 1 collections initialized for role: mx.com.restaurante.domain.Cliente.reservaciones
[DEBUG] HHH000387: ResultSet's statement was not registered
[DEBUG] Done loading collection
[DEBUG] Closing JPA EntityManager
[DEBUG] Database connection info: 
	database product name=MySQL
	database version=5.6.17
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
	jdbc driver major version=5
	jdbc driver minor version=1

[DEBUG] validateSchema(validateStrict=false) - start
[DEBUG] Schema is null. Nothing to validate.
[DEBUG] Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
[DEBUG] Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
[DEBUG] setConsumer(consumer) - start
[DEBUG] produce() - start
[DEBUG] setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@4e8f6f9b, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@562c2523) - start
[DEBUG] setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@4e8f6f9b, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@562c2523) - start
[DEBUG] startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1d83184f) - start
[DEBUG] startDataSet() - start
[DEBUG] startElement(uri=, localName=, qName=reservacion, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1d83184f) - start
[DEBUG] getLastTableName() - start
[DEBUG] isLastTable(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] createTableMetaData(tableName=reservacion, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1d83184f) - start
[DEBUG] getColumns(columnNames=[], columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)]) - start
[DEBUG] add(tableName=reservacion, object=tableName=reservacion, columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)], keys=[]) - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableName(tableName=RESERVACION) - start
[DEBUG] getTableName(tableName=RESERVACION) - end - result=RESERVACION
[DEBUG] startTable(metaData=tableName=reservacion, columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)], keys=[]) - start
[DEBUG] getLastTableName() - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getColumnIndex(columnName=idreservacion) - start
[DEBUG] getColumnIndex(columnName=fecha) - start
[DEBUG] getColumnIndex(columnName=num_personas) - start
[DEBUG] getColumnIndex(columnName=num_mesas) - start
[DEBUG] getColumnIndex(columnName=horario) - start
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getLastTableName() - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] row(values=18) - start
[DEBUG] addRow(values=18) - start
[DEBUG] endElement(uri=, localName=, qName=reservacion) - start
[DEBUG] endElement(uri=, localName=, qName=dataset) - start
[DEBUG] getLastTableName() - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] endTable() - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] add(tableName=reservacion, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=reservacion, columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableName(tableName=RESERVACION) - start
[DEBUG] getTableName(tableName=RESERVACION) - end - result=RESERVACION
[DEBUG] endDataSet() - start
[DEBUG] endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[reservacion], _tableMap={RESERVACION=org.dbunit.dataset.DefaultTable[_metaData=tableName=reservacion, columns=[(idreservacion, UNKNOWN, nullableUnknown), (fecha, UNKNOWN, nullableUnknown), (num_personas, UNKNOWN, nullableUnknown), (num_mesas, UNKNOWN, nullableUnknown), (horario, UNKNOWN, nullableUnknown), (idcliente, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
[DEBUG] Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
[DEBUG] Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
[DEBUG] setConsumer(consumer) - start
[DEBUG] produce() - start
[DEBUG] setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@2d2d697, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@796f7e2) - start
[DEBUG] setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@2d2d697, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@796f7e2) - start
[DEBUG] startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@32e57549) - start
[DEBUG] startDataSet() - start
[DEBUG] startElement(uri=, localName=, qName=cliente, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@32e57549) - start
[DEBUG] getLastTableName() - start
[DEBUG] isLastTable(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] createTableMetaData(tableName=cliente, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@32e57549) - start
[DEBUG] getColumns(columnNames=[], columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)]) - start
[DEBUG] add(tableName=cliente, object=tableName=cliente, columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)], keys=[]) - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableName(tableName=CLIENTE) - start
[DEBUG] getTableName(tableName=CLIENTE) - end - result=CLIENTE
[DEBUG] startTable(metaData=tableName=cliente, columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)], keys=[]) - start
[DEBUG] getLastTableName() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getColumnIndex(columnName=idcliente) - start
[DEBUG] getColumnIndex(columnName=nombre) - start
[DEBUG] getColumnIndex(columnName=telefono) - start
[DEBUG] getColumnIndex(columnName=email) - start
[DEBUG] getColumnIndex(columnName=comentario) - start
[DEBUG] getLastTableName() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] row(values=18) - start
[DEBUG] addRow(values=18) - start
[DEBUG] endElement(uri=, localName=, qName=cliente) - start
[DEBUG] endElement(uri=, localName=, qName=dataset) - start
[DEBUG] getLastTableName() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] endTable() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] add(tableName=cliente, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=cliente, columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableName(tableName=CLIENTE) - start
[DEBUG] getTableName(tableName=CLIENTE) - end - result=CLIENTE
[DEBUG] endDataSet() - start
[DEBUG] endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[cliente], _tableMap={CLIENTE=org.dbunit.dataset.DefaultTable[_metaData=tableName=cliente, columns=[(idcliente, UNKNOWN, nullableUnknown), (nombre, UNKNOWN, nullableUnknown), (telefono, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (comentario, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
[DEBUG] execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@249dc682]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3d4bb065], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@d9ad43e, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
[DEBUG] createDataSet() - start
[DEBUG] createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@249dc682]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3d4bb065], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@d9ad43e, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@249dc682]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3d4bb065], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@d9ad43e, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] iterator() - start
[DEBUG] createIterator(reversed=false) - start
[DEBUG] orderedValues() - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableMetaData() - start
[DEBUG] getTable() - start
[DEBUG] getTableMetaData(tableName=reservacion) - start
[DEBUG] initialize() - start
[DEBUG] Initializing the data set from the database...
[DEBUG] 
	database product name=MySQL
	database version=5.6.17
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
	jdbc driver major version=5
	jdbc driver minor version=1

[DEBUG] metadata resultset=com.mysql.jdbc.JDBC4ResultSet@48511821
[DEBUG] getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3d4bb065], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@d9ad43e, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}]) - start
[DEBUG] Qualified table names feature is disabled. Returning plain table name
[DEBUG] getQualifiedName(prefix=null, name=cliente, escapePattern=null) - start
[DEBUG] add(tableName=cliente, object=null) - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableName(tableName=CLIENTE) - start
[DEBUG] getTableName(tableName=CLIENTE) - end - result=CLIENTE
[DEBUG] getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3d4bb065], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@d9ad43e, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}]) - start
[DEBUG] Qualified table names feature is disabled. Returning plain table name
[DEBUG] getQualifiedName(prefix=null, name=reservacion, escapePattern=null) - start
[DEBUG] add(tableName=reservacion, object=null) - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableName(tableName=RESERVACION) - start
[DEBUG] getTableName(tableName=RESERVACION) - end - result=RESERVACION
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] isEscaped returns 'false' for tableName=reservacion (dbIdentifierQuoteString=`)
[DEBUG] Validating if table 'reservacion' exists in schema 'null' ...
[DEBUG] close(resultSet=com.mysql.jdbc.JDBC4ResultSet@2a0706f) - start
[DEBUG] update(tableName=reservacion, object=table=reservacion, cols=[(idreservacion, INTEGER, noNulls), (fecha, DATE, noNulls), (num_personas, INTEGER, noNulls), (num_mesas, INTEGER, noNulls), (horario, VARCHAR, noNulls), (idcliente, INTEGER, nullable)], pk=[(idreservacion, INTEGER, noNulls)]) - start
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getTableName(tableName=reservacion) - start
[DEBUG] getTableName(tableName=reservacion) - end - result=RESERVACION
[DEBUG] getQualifiedName(prefix=null, name=reservacion, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@249dc682]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3d4bb065], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@d9ad43e, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=reservacion, escapePattern=null) - start
[DEBUG] addBatch(sql=delete from reservacion) - start
[DEBUG] Added SQL: delete from reservacion
[DEBUG] executeBatch() - start
[DEBUG] DbUnit SQL: delete from reservacion
[DEBUG] clearBatch() - start
[DEBUG] close() - start
[DEBUG] execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@249dc682]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3d4bb065], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@d9ad43e, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
[DEBUG] createDataSet() - start
[DEBUG] createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@249dc682]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3d4bb065], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@d9ad43e, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@249dc682]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3d4bb065], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@d9ad43e, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] iterator() - start
[DEBUG] createIterator(reversed=false) - start
[DEBUG] orderedValues() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableMetaData() - start
[DEBUG] getTable() - start
[DEBUG] getTableMetaData(tableName=cliente) - start
[DEBUG] initialize() - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] isEscaped returns 'false' for tableName=cliente (dbIdentifierQuoteString=`)
[DEBUG] Validating if table 'cliente' exists in schema 'null' ...
[DEBUG] close(resultSet=com.mysql.jdbc.JDBC4ResultSet@6f865ab5) - start
[DEBUG] update(tableName=cliente, object=table=cliente, cols=[(idcliente, INTEGER, noNulls), (nombre, VARCHAR, noNulls), (telefono, VARCHAR, noNulls), (email, VARCHAR, noNulls), (comentario, VARCHAR, nullable)], pk=[(idcliente, INTEGER, noNulls)]) - start
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getTableName(tableName=cliente) - start
[DEBUG] getTableName(tableName=cliente) - end - result=CLIENTE
[DEBUG] getQualifiedName(prefix=null, name=cliente, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=ProxyConnection[PooledConnection[com.mysql.jdbc.JDBC4Connection@249dc682]], super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4d068eb0, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@27497f4c, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3d4bb065], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@d9ad43e, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6d8e17c4, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[DEBUG] getQualifiedName() - start
[DEBUG] getQualifiedName(prefix=null, name=cliente, escapePattern=null) - start
[DEBUG] addBatch(sql=delete from cliente) - start
[DEBUG] Added SQL: delete from cliente
[DEBUG] executeBatch() - start
[DEBUG] DbUnit SQL: delete from cliente
[DEBUG] clearBatch() - start
[DEBUG] close() - start
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 2, maxSize = 32, parentContextCount = 0, hitCount = 38, missCount = 2]
[DEBUG] Returning cached instance of singleton bean 'org.springframework.boot.test.mock.mockito.MockitoBeans'
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 2, maxSize = 32, parentContextCount = 0, hitCount = 39, missCount = 2]
[DEBUG] Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]
[DEBUG] Spring test ApplicationContext cache statistics: [DefaultContextCache@6b3ebb48 size = 2, maxSize = 32, parentContextCount = 0, hitCount = 40, missCount = 2]
[DEBUG] After test method: context [DefaultTestContext@29800a5b testClass = ClienteDomainTest, testInstance = mx.com.restaurante.test.domain.ClienteDomainTest@67aa030a, testMethod = actualizarClienteTest@ClienteDomainTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
[DEBUG] Resetting RequestContextHolder for test context [DefaultTestContext@29800a5b testClass = ClienteDomainTest, testInstance = mx.com.restaurante.test.domain.ClienteDomainTest@67aa030a, testMethod = actualizarClienteTest@ClienteDomainTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
[DEBUG] After test class: context [DefaultTestContext@29800a5b testClass = ClienteDomainTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a168b30 testClass = ClienteDomainTest, locations = '{}', classes = '{class mx.com.restaurante.Application, class mx.com.restaurante.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@1dbfecae, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@529a41a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@11bbfd47], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
